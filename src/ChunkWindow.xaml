<Window x:Class="PyChunks.ChunkWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        Title="PyChunks Editor" 
        Height="500" 
        Width="700" 
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="CanResizeWithGrip"
        Closing="Window_Closing">
    <Window.Resources>
        <!-- Replace your existing edit pencil button with this improved version -->

        <!-- First, add this style to your Window.Resources section -->
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#AAAAAA"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3A3A3A"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2D2D2D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="4" Background="#4A4A4A"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <RepeatButton Grid.Row="0" 
                      Style="{StaticResource ScrollBarLineButton}"
                      Command="ScrollBar.LineUpCommand" />
                <Track Name="PART_Track" 
               Grid.Row="1" 
               IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageUpCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" 
                       Margin="2,0,2,0"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageDownCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" 
                      Style="{StaticResource ScrollBarLineButton}"
                      Command="ScrollBar.LineDownCommand"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <RepeatButton Grid.Column="0" 
                      Style="{StaticResource ScrollBarLineButton}"
                      Command="ScrollBar.LineLeftCommand" />
                <Track Name="PART_Track" 
               Grid.Column="1" 
               IsDirectionReversed="false">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageLeftCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" 
                       Margin="0,2,0,2"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageRightCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2" 
                      Style="{StaticResource ScrollBarLineButton}"
                      Command="ScrollBar.LineRightCommand"/>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property="MinWidth" Value="12"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="12"/>
                    <Setter Property="MinHeight" Value="12"/>
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12"/>
                    <Setter Property="MinWidth" Value="12"/>
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Apply the new ScrollViewer style to your TextBox -->
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                            <ScrollBar x:Name="PART_VerticalScrollBar"
                              Grid.Row="0"
                              Grid.Column="1"
                              Value="{TemplateBinding VerticalOffset}"
                              Maximum="{TemplateBinding ScrollableHeight}"
                              ViewportSize="{TemplateBinding ViewportHeight}"
                              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                              Orientation="Horizontal"
                              Grid.Row="1"
                              Grid.Column="0"
                              Value="{TemplateBinding HorizontalOffset}"
                              Maximum="{TemplateBinding ScrollableWidth}"
                              ViewportSize="{TemplateBinding ViewportWidth}"
                              Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Custom button style -->
        <Style x:Key="TopBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3A3A3A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2D2D2D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Run button style -->
        <Style x:Key="RunButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#45A049"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#3D8B3D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border CornerRadius="8" Background="#1E1E1E" BorderThickness="1" BorderBrush="#333333">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- Custom Title Bar -->
            <Border Grid.Row="0" 
                    Background="#252526" 
                    MouseLeftButtonDown="TitleBar_MouseLeftButtonDown"
                    CornerRadius="8,8,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Application Icon & Title -->
                    <StackPanel Grid.Column="0" 
            Orientation="Horizontal" 
            VerticalAlignment="Center"
            Margin="12,0,0,0">
                        <!-- Edit Pencil Icon -->
                        <Button Click="EditTitle_Click"
        Style="{StaticResource IconButtonStyle}"
        ToolTip="Edit Title"
        VerticalAlignment="Center">
                            <Path Data="M16.6818182,6.91477273 L15.0852273,5.31818182 C14.8409091,5.07386364 14.4375,5.07386364 14.1931818,5.31818182 L13.0284091,6.48295455 L15.5170455,8.97159091 L16.6818182,7.80681818 C16.9261364,7.5625 16.9261364,7.15909091 16.6818182,6.91477273 Z M9,10.5113636 L9,13 L11.4886364,13 L15.5,8.98863636 L13.0113636,6.5 L9,10.5113636 Z"
          Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
          Stretch="Uniform"
          Width="14"
          Height="14"/>
                        </Button>

                        <!-- Display text -->
                        <TextBlock x:Name="TitleTextBlock"
               Text="New Chunk"
               Foreground="White"
               FontWeight="Medium"
               FontFamily="Segoe UI"
               FontSize="14"
               VerticalAlignment="Center"
               Visibility="Visible"/>

                        <!-- Editable text -->
                        <TextBox x:Name="TitleTextBox"
             Text="New Chunk"
             FontFamily="Segoe UI"
             FontSize="14"
             VerticalAlignment="Center"
             Visibility="Collapsed"
             Width="100"
             Background="Transparent"
             Foreground="White"
             BorderBrush="Transparent"/>

                    </StackPanel>



                    <!-- Window Controls -->
                    <StackPanel Grid.Column="2" 
                                Orientation="Horizontal" 
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Margin="0,0,8,0">
                        <!-- Minimize Button -->
                        <Button Style="{StaticResource TopBarButtonStyle}"
                                Click="MinimizeButton_Click">
                            <Rectangle Width="10" 
                                       Height="1" 
                                       Fill="White" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center"/>
                        </Button>

                        <!-- Maximize/Restore Button -->
                        <Button Style="{StaticResource TopBarButtonStyle}"
                                Click="MaximizeRestoreButton_Click"
                                Name="MaximizeRestoreButton">
                            <Grid>
                                <!-- Normal maximize icon -->
                                <Rectangle Width="10" 
                                           Height="10" 
                                           Stroke="White" 
                                           StrokeThickness="1"
                                           Fill="Transparent"
                                           HorizontalAlignment="Center" 
                                           VerticalAlignment="Center"/>
                            </Grid>
                        </Button>

                        <!-- Close Button -->
                        <Button Style="{StaticResource TopBarButtonStyle}"
                                Click="CloseButton_Click">
                            <Grid Width="10" Height="10">
                                <Line X1="0" Y1="0" X2="10" Y2="10" Stroke="White" StrokeThickness="1"/>
                                <Line X1="0" Y1="10" X2="10" Y2="0" Stroke="White" StrokeThickness="1"/>
                            </Grid>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- Content Area -->
            <Grid Grid.Row="1" Name="ContentGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Line Numbers -->
                <TextBox Name="LineNumbersTextBox"
                         IsReadOnly="True"
                         Background="#252526"
                         Foreground="#6E6E6E"
                         VerticalScrollBarVisibility="Hidden"
                         HorizontalAlignment="Left"
                         Width="40"
                         Padding="0,2,5,2"
                         BorderThickness="0"
                         FontFamily="Consolas"
                         FontSize="14"
                         TextWrapping="NoWrap"
                         AcceptsReturn="True"
                         TextAlignment="Right"
                         VerticalAlignment="Stretch" />

                <!-- Code Editor -->
                <avalonEdit:TextEditor Name="PopupTextBox"
                       TextChanged="PopupTextBox_TextChanged"
                       Grid.Column="1"
                       SyntaxHighlighting="Python"
                       FontFamily="Consolas"
                       FontSize="14"
                       Background="#1E1E1E"
                       Foreground="#D4D4D4"
                       ShowLineNumbers="False"
                       VerticalScrollBarVisibility="Auto"
                       HorizontalScrollBarVisibility="Auto"
                       Padding="10,2,5,2"
                       BorderThickness="0"
                       VerticalAlignment="Stretch" />
            </Grid>

            <!-- Bottom Bar with Run Button -->
            <Border Grid.Row="2" 
        Background="#252526" 
        Height="50">
                <StackPanel Orientation="Horizontal" 
                HorizontalAlignment="Right" 
                VerticalAlignment="Center" 
                Margin="0,0,20,0">



                    <!-- Load Button -->
                    <!-- Load Button - Innovative Icon -->
                    <Button Style="{StaticResource IconButtonStyle}"
        ToolTip="Load File"
        Click="LoadButton_Click"
        Margin="0,0,10,0">
                        <Path Data="M6 2a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V8l-6-6H6zm7 1.5L18.5 9H13V3.5zM9.5 12l1.41 1.41L8.83 15l2.08 2.09L9.5 18.5 6 15l3.5-3zm5 0L13.09 13.41 15.17 15l-2.08 2.09L14.5 18.5 18 15l-3.5-3z"
          Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
          Stretch="Uniform"
          Width="18"
          Height="18"/>
                    </Button>



                    <!-- Save Button -->
                    <Button Style="{StaticResource IconButtonStyle}"
                ToolTip="Save Code"
                Click="SaveButton_Click"
                Margin="0,0,10,0">
                        <Path Data="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"
                  Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                  Stretch="Uniform"
                  Width="14"
                  Height="14"/>
                    </Button>

                    <!-- Run Button -->
                    <Button Content="▶ Run"
                Style="{StaticResource RunButtonStyle}"
                Width="100"
                Height="32"
                Click="RunButton_Click" />
                </StackPanel>
            </Border>
        </Grid>
    </Border>
</Window>